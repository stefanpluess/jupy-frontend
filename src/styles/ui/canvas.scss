@import '../variables';


/* INFO :: canvas area = .rfWrapper*/
/*background color canvas area*/
.wrapper .react-flow {
    background: $shared-bg-color;
}

.wrapper .rfWrapper {
    flex-grow: 1;
    height: 100%;
}

/* INFO :: canvas area - simple node*/
.rfWrapper .react-flow__node-node {
    display: flex;
}

.rfWrapper .react-flow__node-node .simpleNodewrapper {
    overflow: hidden;
    display: flex;
    padding: 2px;
    position: relative;
    border-radius: $node-border-radius;
    box-shadow: $node-box-shadow-not-active-lighter; /* opacity a bit less that inner*/
    flex-grow: 1;
    min-height: 85px;
}

.rfWrapper .react-flow__node-node .inner {
    background: $node-background;
    box-shadow: $node-box-shadow-not-active;
    border-radius: $node-border-radius;
    border: $node-border;
    display: flex;
    flex-direction: column;
    justify-content: center;
    flex-grow: 1;
    position: relative;
    min-width: 196px;
}

.rfWrapper .react-flow__node-node .simpleNodewrapper.selected,
.rfWrapper .react-flow__node-node .simpleNodewrapper:hover{
    box-shadow: $node-box-shadow-lighter;
}
.rfWrapper .react-flow__node-node .inner.selected,
.rfWrapper .react-flow__node-node .inner:hover{
    box-shadow: $node-box-shadow;
}

/*color of the code area in code cell*/
.rfWrapper .textareaNode {
    border-radius: $node-border-radius;
    background-color: rgba(255, 255, 255, 0.223);
    min-height: 59px;  // min-height - 26px
    min-width: 150px;
    margin-bottom: 20px;
}

/* animation of the execution */
.rfWrapper .gradient:before {
    content: "";
    position: absolute;
    padding-bottom: calc(100% * 1.41421356237);
    width: calc(100% * 1.41421356237);
    background: conic-gradient(
        from -160deg at 50% 50%,
        #e92a67 0deg,
        #a853ba 120deg,
        #2a8af6 240deg,
        #e92a67 360deg
    );
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    border-radius: 100%;
}
.rfWrapper .react-flow__node-node .simpleNodewrapper.gradient:before {
    content: "";
    background: conic-gradient(
        from -160deg at 50% 50%,
        #e92a67 0deg,
        #a853ba 120deg,
        #2a8af6 240deg,
        rgba(42, 138, 246, 0) 360deg
    );
    animation: spinner 4s linear infinite;
    transform: translate(-50%, -50%) rotate(0deg);
    z-index: -1;
}
@keyframes spinner {
    100% {
        transform: translate(-50%, -50%) rotate(-360deg);
    }
}

/* INFO :: canvas area - ouput node*/
/*color of the output cell*/
.rfWrapper .outputNode {
    background-color: $node-background;
    color: $shared-text-color;
    text-align: left;
    resize: none;
    outline: none;
    font-size: 11px;
    min-height: 40px;
    border: $node-border;

    min-width: 40px;
    padding: 4px;

    // TESTME merge - in Home.css was like this:
    // min-width: 50px;
    // border-radius: 2px;
    // padding: 5px;
}

.rfWrapper .outputNode:hover {
    box-shadow: $node-box-shadow;;
}

/* INFO :: canvas area - group node*/
/*frame around bubble cell*/
.rfWrapper .react-flow__node-group {
    background: $group-node-background;
    border: $node-border;
    box-shadow: $node-box-shadow-not-active;
    resize: both;
    width: auto;
}
/*shade around bubble cell when hovering/selecting */
.rfWrapper .react-flow__node-group.selected,
.rfWrapper .react-flow__node-group:hover {
    box-shadow: $node-box-shadow;
}
.rfWrapper .react-flow__node-group.selected {
    border-width: 2px;
}

/* INFO :: canvas area - markdown node*/
.rfWrapper .react-flow__node-mdNode {
    background: $markdown-node-background;
    box-shadow: $node-box-shadow-not-active;
    border: $node-border;
    width: auto;
    height: auto;
    text-align: left !important;
    border-radius: $node-border-radius;
}
.rfWrapper .react-flow__node-mdNode:hover {
    box-shadow: $node-box-shadow;
}

/* INFO :: canvas area - lock icon*/
.rfWrapper .lock-icon{
    font-size: 10px;
  }

.rfWrapper .lock-icon:hover{
    color: rgba(223, 223, 223, 0.502);

  }

.rfWrapper .lock-icon-transition {
    transition: opacity 0.5s ease-in-out;
    opacity: 0;
    transform: scale(1.2);
  }
  
.rfWrapper .lock-icon-visible {
    opacity: 1;
}

/* INFO :: canvas area - ouput node disabled toolbar*/
// .rfWrapper .detachDisabled {
//     pointer-events: none;
// }
// .rfWrapper .detachDisabled:hover{
//     background: $toolbar-background;
// }

.rfWrapper .icon-detachoff-warning{
    color: #a60034;
}

.rfWrapper .icon-detachoff-detach{
    opacity: 0.2;
}